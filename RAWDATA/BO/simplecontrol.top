# this function is executed once for every new user chatting with bo
outputmacro: bo()  # you get bo test by default
$cs_token = #DO_INTERJECTION_SPLITTING  | #DO_SUBSTITUTE_SYSTEM   | #DO_NUMBER_MERGE | #DO_DATE_MERGE  | #DO_PROPERNAME_MERGE  | #DO_SPELLCHECK  | #DO_PARSE 
$cs_token += #SPLIT_QUOTE | #NO_WITHIN
$cs_response = #RESPONSE_UPPERSTART | #RESPONSE_REMOVESPACEBEFORECOMMA | #RESPONSE_ALTERUNDERSCORES | #RESPONSE_REMOVETILDE 

^addtopic(~introductions)
$cs_control_main = ~control
$cs_control_post = ~XPOSTPROCESS  # uncomment to enable talk
$userprompt = ^"%user: >"
$botprompt = ^"Bo: "
$singleResponse = 1 # issue only 1 output message

# knowledge model variables
# ^parsebo()
$subject = bo

table: defaultbot (^name)
^createfact(^name defaultbot defaultbot)
DATA:
bo

topic: ~control system ()

# on startup, do introduction
u: ( %input<%userfirstline)
	gambit(~introductions)

u: (< ["shut up" "be quiet" "stop talking" "be silent" silence quiet] >) $shutup = 1 [oh ok][I'll be quiet then]
u: (< talk  >) $shutup = null

u: (\[ callback \]) Callback seen.
u: (\[ loopback \]) Loopback seen.
u: (\[ alarm \]) Alarm seen.
u: (< loopback test) \[ loopback=1000 \] Loopback requested.
u: (< callback test) \[ callback=1000 \] Callback requested.
u: (< alarm test) \[ alarm=5000 \] Alarm requested.

# #! Tell me more
# u: MORE ([~more])
#     ^nofail(TOPIC ^input($lastinput)) ^fail(SENTENCE)
#     # $$tmp = ^input($lastInput) ^fail(SENTENCE)
#     # if( $$tmp == $lastout)
#     # {
#     #     [I don't think I know anything else. ][Why don't we talk about someting else? ]
#     #     [I'm tired of talking about this, ask me someting else? ]
#     # }

u: () # main per-sentence processing
	$_responseCount = %response

	$lastInput = %originalinput # grab input from last volley

	# $lastout = %lastoutput

	if ($singleResponse) {$_responseCount = 0} # disable this to respond to each sentence in a volley

	$$currenttopic = %topic		# get the current topic at start of volley

	if ( %response == $_responseCount ) {nofail(TOPIC ^rejoinder())}	# try for rejoinders. might generate an answer directly from what we are looking for.

	if (%length == 0 AND %response == $_responseCount )
	{
		nofail(TOPIC ^gambit($$currenttopic))  # gambit current topic since no input (usually start of conversation)
	}

	if (%response == $_responseCount) { nofail(TOPIC ^respond($$currenttopic)) } # current topic tries to respond to input

	if (%response == $_responseCount) # see if some other topic has keywords matching his input (given we have no response yet)
	{
		@8 = ^keywordtopics()	# get topics referred in input
		loop()
		{
			$$topic = first(@8subject)
			nofail(TOPIC ^respond($$topic))
			if (%response != $_responseCount) # stop when we find something to say
			{
				^end(RULE)	# we are done, this terminates the loop (not the rule)
			}
		}
	}	

	# try for anytime lines
	if (%response == $_responseCount) 
	{
		nofail(TOPIC ^respond(~anytime))
	}

	# having no good response we know, now generate quibbles

	# now we need to find fake responses 
	if (%response == $_responseCount AND %rand > 50)
	{
		nofail(TOPIC respond(~QUIBBLE_ALL))
	}

	# if we have rejoinders for what we said OR we asked a question, stop here
	if (%outputrejoinder OR %lastquestion) 
	{
		end(TOPIC)
	}


	if (%response == $_responseCount AND ^marked($$currenttopic)) { nofail(TOPIC ^gambit($$currenttopic)) } # gambit current topic since keywords match current topic

	if (%response == $_responseCount) # gambit from ANY matching topic
	{
		@8 = ^keywordtopics()	# get topics referred in input
		loop()
		{
			$$topic = first(@8subject)
			nofail(TOPIC ^Gambit($$topic))	# gambit in best matching topic
			if (%response != $_responseCount) # stop when we find something
			{
				^end(RULE)
			}
		}
	}
	if (%response == $_responseCount){ nofail(TOPIC ^gambit($$currenttopic)) } # gambit from current topic even though no keywords matched
	
	if (%response == $_responseCount) 
	{ 
		@8 = ^GambitTopics()		# all topics with gambits (excluding system topics)
		loop()
		{
			$$topic = pick(@8subject)
			nofail(TOPIC ^Gambit($$topic))	# try a topic at random
			if (%response != $_responseCount)
			{
				^end(RULE)
			}
		}
	}

	
	if (%response == $_responseCount) 
	{
		 ^repeat() 
		 [I don't know what to say. ]
		 [I'm sorry... I don't think I understand what you're saying. ]
		 [Could you please say that again, but differently? ]
		 [Could you tell me that in a different way? ]
		 [Could you try saying that again for me, but in a different way? I didn't quite catch that. ]
		 [I'm sorry. I just don't understand. Maybe if you said that in a different way? ]
	}


topic: ~XPOSTPROCESS system () # gambits only - not allowed to write to  output - generates speech on windows -- for Linux you'd want to install Festival (or equivalent) and call that instead.

t: (^query(direct_v ? chatoutput ? -1 ? @9  ))  # get the sentences  (why is the object) -- no longer has quotes around it

	
	$lastout = %lastoutput
	# loop()
	# {
	# 	$$tmp = ^last(@9subject) # note last output which is quoted string

	# 	if (!%server AND %os == windows  AND !$SHUTUP)
	# 	{
	# 		$$tmp = ^"talk \"$$tmp\" "
	# 		popen($$tmp null)
	# 	}
 #        if (!%server AND %os == mac  AND !$SHUTUP)
 #        {
 #            $$shellerror = system(^"say \"$$tmp\" ")
 #        }
	# }
